-----------------------------atualizar----------------------------
üöÄ Comandos para atualizar seu reposit√≥rio:

git add .
git commit -m "Descreva aqui o que voc√™ mudou"
git push

üß† Explica√ß√£o r√°pida:
git add . ‚Üí adiciona todas as altera√ß√µes feitas

git commit -m "mensagem" ‚Üí salva um ponto de controle com uma descri√ß√£o do que mudou

git push ‚Üí envia tudo para o reposit√≥rio no GitHub

‚úÖ Exemplo pr√°tico:

git commit -m "Adicionado rodap√© com copyright"
git push

Se voc√™ quiser ver o que mudou antes de subir, use:

git status      # Mostra arquivos modificados
git diff        # Mostra as altera√ß√µes nos arquivos


-------------------------Criar------------------------------------

Aqui est√° uma lista de comandos, em ordem, para criar um reposit√≥rio Git local, adicionar arquivos e fazer o primeiro commit:

‚úÖ 1. Criar uma pasta (se necess√°rio):

mkdir nome-do-projeto
cd nome-do-projeto

‚úÖ 2. Iniciar o reposit√≥rio Git:

git init

‚úÖ 3. Adicionar arquivos ao reposit√≥rio (ex: todos os arquivos):

git add .

Ou adicione arquivos espec√≠ficos:

git add nome-do-arquivo.extensao

‚úÖ 4. Fazer o primeiro commit com uma mensagem:

git commit -m "Primeiro commit"

‚úÖ (Opcional) Verificar o status do reposit√≥rio:

git status

‚úÖ 5. Criar um reposit√≥rio remoto no GitHub:
V√° at√© https://github.com

Clique em "New repository"

Escolha um nome, deixe como p√∫blico ou privado, e n√£o marque para adicionar README (j√° que voc√™ j√° criou localmente)

Clique em "Create repository"

‚úÖ 6. Conectar o reposit√≥rio local ao remoto:
Substitua URL_DO_REPOSITORIO pela URL gerada no GitHub (ex: https://github.com/seuusuario/nome-do-repo.git):

git branch -M main

git remote add origin URL_DO_REPOSITORIO

‚úÖ 7. Enviar os arquivos (push) para o GitHub:

git push -u origin main

Isso define a branch principal como main (padr√£o no GitHub) e envia o conte√∫do para l√°.

‚úÖ (Opcional) Verificar a URL remota configurada:

git remote -v

